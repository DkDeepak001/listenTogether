// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}


datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}


enum FileType{
  IMAGE
  AUDIO
}

model User {
  id                String       @id @default(cuid())
  country           String
  display_name      String
  email             String
  spotifyId         String  @unique
  href              String
  images            String
  product           String
  type              String
  uri               String
  refreshToken      String

  requestFrom      RequestLog[] @relation("requestFrom")
  requestTo         RequestLog[] @relation("requestTo")
  followers        Friends[] @relation("followers")
  following        Friends[] @relation("following")
  fileMetadata      FileMetadata[]
  song              Song[]

  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt


  @@index([spotifyId,id])
}


model RequestLog {
  id                String       @id @default(cuid())
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  requestFrom      User?        @relation("requestFrom",fields: [requestFromId], references: [id])
  requestTo         User?        @relation("requestTo",fields: [requestToId], references: [id])
  requestFromId     String
  requestToId     String
  status           String
  
  @@index([requestToId])
  @@unique([requestFromId, requestToId])
}

model Friends{
  id                String       @id @default(cuid())
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  followersId         String
  followingId        String
  followers       User?        @relation("followers",fields: [followersId], references: [id])
  following       User?        @relation("following",fields: [followingId], references: [id])

  @@unique([followersId, followingId])
}


model FileMetadata{
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  type FileType
  createdById String
  createdBy User @relation(fields: [createdById], references: [id])
  
  song Song[] @relation("song")
  image Song[] @relation("image")
}


//TODO add song duration
model Song{
  id String @id @default(cuid())
  createdBy User @relation(fields: [createdById], references: [id])
  createdById String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  album String
  artist String
  imageUri String
  songUri String
  ImageMetadataId String
  imageMetadata FileMetadata @relation("image",fields: [ImageMetadataId], references: [id])
  SongMetadataId String
  songMetadata FileMetadata @relation("song",fields: [SongMetadataId], references: [id])

}
